GitHub Extra Credit ProjectSamuel MarquardtFor the extra credit assignment, I chose to write a script that interacts with a football stats database. This script focuses on accessing 49 years of football stats and displaying the top players in a given year. Its main purpose is to show players the top players from the year of their choice.When the script is run it starts off by calling the main module and then prompting the user to select a year for the analysis. The year selection must be within 1970 and 2019 to be a valid input. If invalid input is given, the program displays this to the user and repeats the question. Once valid input is given, the script concatenates this year selection to the file directory string and opens the selected csv file. Following this, the script reads the first line and gets rid of it because it is column headers and therefore are not important. It then splits the following lines by each comma in the line which obtains the various fields of the file. From this point the script stores players based on their position in a hash table with their total yards in their position. For instance, a QB is paired with passing yards, a RB is paired with rushing yards, and so on. Once we have done this, we then find the player with the highest number of yards in each category through our hash map that we made. The script displays this data to the user and then asks the user if they would like to access another year. If the user selects yes, the whole process repeats again; otherwise, the script ends and exits.When writing this script, I focused on being able to give the user a large amount of data that they could access in a very simple way. I was able to get a large database of football stats from https://www.fantasyfootballdatapros.com/csv_files. This contained stats from 1970 to 2019 which was much larger than other websites so I decided this would be the best option for the database. As I looked over the data, I thought of different ways that I could manipulate it and show meaningful stats to the user. Eventually, I realized that simplifying the data down to the best player in passing, rushing, and receiving was the cleanest way to display the data for any given year. To quantify the best player, I decided that it would be based on the player with the most yards and not based on anything else. This is because ultimately this is the most important aspect of football; nothing else really matters if you aren’t getting any yards. Once I had decided on this, I knew how to approach the problem and got started coding it all.As for testing my script I first focused on making sure my script was opening the file and splitting the fields correctly. I tested this by having the output be printed to screen for the first line to make sure there was no issues. Following this, to make sure the output of the top player was correct, I had the script display all QB’s and their total yards so I could double check the output to make sure everything was correct. Besides those two instances I didn’t have many issues that required testing.Before I started this project with the football database, I was considering doing a script that analyzed stock market data instead. I was debating both of these topics and ended up wasting a lot of time trying to get a stock market script going and kept running into problems with everything. So, ultimately, the thing I would tell myself before starting this project is to not waste my time on the stock market idea and just commit to the football database idea.